{"version":3,"file":"static/js/855.99a16794.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"notfound\":\"Cast_notfound__7--Mv\",\"castList\":\"Cast_castList__ARoWn\",\"castImg\":\"Cast_castImg__T4WbF\",\"castName\":\"Cast_castName__-i08u\",\"castCharacter\":\"Cast_castCharacter__Rliw1\"};","import { useState, useEffect } from 'react';\nimport api from '../../services/api';\nimport Loader from 'components/Loader/Loader';\n\nimport css from './Cast.module.css';\n\nconst { useParams } = require('react-router-dom');\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    setIsLoading(true);\n    api\n      .getMovieCredits(movieId)\n      .then(cast => {\n        setCast(cast);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <ul className={css.castList}>\n      {cast.length === 0 && !isLoading ? (\n        <p className={css.notfound}>Cast not found!...🥺</p>\n      ) : (\n        cast.map(({ credit_id, character, name, profile }) => {\n          return (\n            <li key={credit_id}>\n              <img className={css.castImg} src={profile} alt={name} />\n              <p className={css.castName}>{name}</p>\n              <p className={css.castCharacter}>Character: {character}</p>\n            </li>\n          );\n        })\n      )}\n\n      <Loader loading={isLoading} />\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = '23976029dbf9e65a92e47a5047de0abf';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n\nconst getTrendingMovies = async () => {\n  return await axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results.map(({ title, id }) => ({ title, id }));\n    });\n};\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\nconst getSearchedMovie = async query => {\n  return await axios\n    .get(`${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results;\n    });\n};\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n\nconst getMovieDetails = async movieId => {\n  return await axios\n    .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`)\n    .then(res => res.data)\n    .then(({ title, poster_path, vote_average, overview, genres }) => ({\n      title,\n      poster: poster_path\n        ? `https://image.tmdb.org/t/p/w300${poster_path}`\n        : 'https://www.ormistonhospital.co.nz/wp-content/uploads/2016/05/No-Image.jpg',\n      vote_average,\n      overview,\n      genres,\n    }));\n};\n\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n\nconst getMovieCredits = async movieId => {\n  return await axios\n    .get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(response => {\n      return response.data.cast.map(\n        ({ credit_id, character, name, profile_path }) => ({\n          credit_id,\n          name,\n          character,\n          profile: profile_path\n            ? `https://image.tmdb.org/t/p/w300${profile_path}`\n            : 'https://www.ormistonhospital.co.nz/wp-content/uploads/2016/05/No-Image.jpg',\n        })\n      );\n    });\n};\n\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nconst getMovieReviews = async movieId => {\n  return await axios\n    .get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    )\n    .then(response => {\n      return response.data.results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }));\n    });\n};\nconst api = {\n  getTrendingMovies,\n  getSearchedMovie,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\nexport default api;\n"],"names":["useParams","require","useState","cast","setCast","isLoading","setIsLoading","movieId","useEffect","api","then","catch","error","console","log","finally","className","css","length","map","credit_id","character","name","profile","src","alt","Loader","loading","API_KEY","BASE_URL","getTrendingMovies","axios","response","data","results","title","id","getSearchedMovie","query","getMovieDetails","res","poster_path","vote_average","overview","genres","poster","getMovieCredits","profile_path","getMovieReviews","author","content"],"sourceRoot":""}