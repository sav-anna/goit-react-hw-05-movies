{"version":3,"file":"static/js/935.8c4fb6cd.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"notfound\":\"Reviews_notfound__QFJt3\",\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"reviewItem\":\"Reviews_reviewItem__ax7Fo\",\"reviewAuthor\":\"Reviews_reviewAuthor__f4lkL\",\"reviewContent\":\"Reviews_reviewContent__oX1fD\"};","import { useState, useEffect } from 'react';\nimport api from '../../services/api';\nimport Loader from 'components/Loader/Loader';\nimport css from './Reviews.module.css';\n\nconst { useParams } = require('react-router-dom');\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    setIsLoading(true);\n    api\n      .getMovieReviews(movieId)\n      .then(res => {\n        setReviews(res);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 && !isLoading ? (\n        <p className={css.notfound}>Review not found!...🥺</p>\n      ) : (\n        <ul className={css.reviewsLIst}>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li className={css.reviewItem} key={id}>\n                <h4 className={css.reviewAuthor}>Author: {author}</h4>\n                <p className={css.reviewContent}>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n\n      <Loader loading={isLoading} />\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\nconst API_KEY = '23976029dbf9e65a92e47a5047de0abf';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n\nconst getTrendingMovies = async () => {\n  return await axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results.map(({ title, id }) => ({ title, id }));\n    });\n};\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\nconst getSearchedMovie = async query => {\n  return await axios\n    .get(`${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results;\n    });\n};\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n\nconst getMovieDetails = async movieId => {\n  return await axios\n    .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`)\n    .then(res => res.data)\n    .then(({ title, poster_path, vote_average, overview, genres }) => ({\n      title,\n      poster: poster_path\n        ? `https://image.tmdb.org/t/p/w300${poster_path}`\n        : 'https://www.ormistonhospital.co.nz/wp-content/uploads/2016/05/No-Image.jpg',\n      vote_average,\n      overview,\n      genres,\n    }));\n};\n\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n\nconst getMovieCredits = async movieId => {\n  return await axios\n    .get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(response => {\n      return response.data.cast.map(\n        ({ credit_id, character, name, profile_path }) => ({\n          credit_id,\n          name,\n          character,\n          profile: profile_path\n            ? `https://image.tmdb.org/t/p/w300${profile_path}`\n            : 'https://www.ormistonhospital.co.nz/wp-content/uploads/2016/05/No-Image.jpg',\n        })\n      );\n    });\n};\n\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nconst getMovieReviews = async movieId => {\n  return await axios\n    .get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    )\n    .then(response => {\n      return response.data.results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }));\n    });\n};\nconst api = {\n  getTrendingMovies,\n  getSearchedMovie,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\nexport default api;\n"],"names":["useParams","require","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useEffect","api","then","res","catch","error","console","log","finally","length","className","css","map","id","author","content","Loader","loading","API_KEY","BASE_URL","getTrendingMovies","axios","response","data","results","title","getSearchedMovie","query","getMovieDetails","poster_path","vote_average","overview","genres","poster","getMovieCredits","cast","credit_id","character","name","profile_path","profile","getMovieReviews"],"sourceRoot":""}